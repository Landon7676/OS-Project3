Unisex Bathroom Problem

Part a:

File: unisexBathroomA.cpp

Compilation: g++ -o unisexBathroomA unisexBathroomA.cpp -std=c++17 -pthread
This ensures C++ 17 features are enabled

Execution: ./unisexBathroomA

Explanation: The program begins in the main function by creating and running 20 threads (10 for men and 10 for women). Each thread runs the OneMan or OneWoman function, which in turn, calls manEnter or womenEnter. The bathroom checks if the entry conditions are satisfied before allowing a man or woman to enter. The person enters, uses the bathroom, and then exits which is simulated by useBathroom function. When the person exits, the number of peoiple inside the bathroom is updated and other waiting threads are notified thay they can now enter.

Part b:

File: unisexBathroomB.cpp

Compilation: g++ -o unisexBathroomB unisexBathroomB.cpp -std=c++17 -pthread
This ensures C++ 17 features are enabled

Execution: ./unisexBathroomB

Explanation: The program creates 50 threads, each with a random gender assigned. Each person calls the enterBathroom function, passing their ID and gender. When a person attempts to enter, they increment either menWaiting or womenWaiting. The progra, then checks the bathroom conditions to see if women or men can enter. Once the conditions are met, the person enters the bathrom and either menInside or womenInside is updated. Bathroom usage is simulated by sleeping the thread. Once a person finishes they exit the bathroom and the appropriate "Inside" variable is decremented. Once there are no people of tjhe current gener left, the program checks if the other gender can enter, allowing only 10 consecutive threads of the same gender.
